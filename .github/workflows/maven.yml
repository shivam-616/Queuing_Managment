# Name of the workflow
name: Deploy to Google Cloud Run

# This workflow runs on pushes to your 'master' branch
on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Your specific project details are set here
    env:
      PROJECT_ID: 'queue-mangment-system'
      REGION: 'us-central1'
      SERVICE_NAME: 'queue-management-system'
      REPO_NAME: 'queue-app-repo'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using the Service Account key you created
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
           credentials_json: '${{ secrets.GCP_SA_KEY }}'
      # Set up the GCloud SDK
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      # Configure Docker to use the gcloud command-line tool as a credential helper
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Build the Docker image, tagging it with the unique commit SHA
      - name: Build Docker image
        run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      # Push the Docker image to Google Artifact Registry
      - name: Push Docker image
        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # Deploy the image to Cloud Run, creating a new revision
      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          # Deploy the specific image we just built and pushed
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
